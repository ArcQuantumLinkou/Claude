import React, { useState } from 'react';
import { CheckCircle, AlertCircle, Lightbulb, Target, TrendingUp } from 'lucide-react';

const DebuggingAssessment = () => {
  const [currentSection, setCurrentSection] = useState('overview');
  const [checkedItems, setCheckedItems] = useState({});

  const toggleCheck = (id) => {
    setCheckedItems(prev => ({
      ...prev,
      [id]: !prev[id]
    }));
  };

  const sections = {
    overview: { name: '目前方法概覽', icon: Target },
    strengths: { name: '優點分析', icon: CheckCircle },
    weaknesses: { name: '潛在問題', icon: AlertCircle },
    improvements: { name: '改進建議', icon: TrendingUp },
    checklist: { name: '除錯檢查清單', icon: Lightbulb }
  };

  const renderOverview = () => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-lg">
        <h3 className="font-semibold text-blue-800 mb-2">你的目前方法：</h3>
        <div className="text-blue-700">
          <p>• 使用多個AI工具 (ChatGPT, Grok, Gemini) 生成Python/pandas代碼</p>
          <p>• 遇到錯誤時讓AI工具互相修正</p>
        </div>
      </div>
      
      <div className="bg-gray-50 p-4 rounded-lg">
        <h3 className="font-semibold text-gray-800 mb-2">評估維度：</h3>
        <div className="grid grid-cols-2 gap-2 text-sm text-gray-600">
          <div>• 效率性</div>
          <div>• 學習效果</div>
          <div>• 錯誤識別能力</div>
          <div>• 代碼品質</div>
          <div>• 問題根因分析</div>
          <div>• 可維護性</div>
        </div>
      </div>
    </div>
  );

  const renderStrengths = () => (
    <div className="space-y-3">
      <div className="bg-green-50 border-l-4 border-green-400 p-4">
        <h4 className="font-semibold text-green-800">🚀 快速原型開發</h4>
        <p className="text-green-700 text-sm mt-1">能快速獲得代碼解決方案，適合探索性分析</p>
      </div>
      
      <div className="bg-green-50 border-l-4 border-green-400 p-4">
        <h4 className="font-semibold text-green-800">🔄 多重驗證</h4>
        <p className="text-green-700 text-sm mt-1">使用多個AI工具可以交叉驗證解決方案</p>
      </div>
      
      <div className="bg-green-50 border-l-4 border-green-400 p-4">
        <h4 className="font-semibold text-green-800">💡 創意解法</h4>
        <p className="text-green-700 text-sm mt-1">不同AI可能提供不同的解決思路</p>
      </div>
      
      <div className="bg-green-50 border-l-4 border-green-400 p-4">
        <h4 className="font-semibold text-green-800">⏰ 時間效率</h4>
        <p className="text-green-700 text-sm mt-1">相比從零學習，能更快獲得可用代碼</p>
      </div>
    </div>
  );

  const renderWeaknesses = () => (
    <div className="space-y-3">
      <div className="bg-red-50 border-l-4 border-red-400 p-4">
        <h4 className="font-semibold text-red-800">🎯 缺乏根因分析</h4>
        <p className="text-red-700 text-sm mt-1">可能只是修復表面問題，沒有理解錯誤真正原因</p>
      </div>
      
      <div className="bg-red-50 border-l-4 border-red-400 p-4">
        <h4 className="font-semibold text-red-800">📚 學習機會流失</h4>
        <p className="text-red-700 text-sm mt-1">過度依賴AI可能阻礙深度理解和技能發展</p>
      </div>
      
      <div className="bg-red-50 border-l-4 border-red-400 p-4">
        <h4 className="font-semibold text-red-800">🔄 無限循環風險</h4>
        <p className="text-red-700 text-sm mt-1">AI之間的修正可能產生新錯誤或相互矛盾</p>
      </div>
      
      <div className="bg-red-50 border-l-4 border-red-400 p-4">
        <h4 className="font-semibold text-red-800">🧠 邏輯思維依賴</h4>
        <p className="text-red-700 text-sm mt-1">可能削弱獨立分析和問題解決能力</p>
      </div>
      
      <div className="bg-red-50 border-l-4 border-red-400 p-4">
        <h4 className="font-semibold text-red-800">📊 數據理解不足</h4>
        <p className="text-red-700 text-sm mt-1">可能忽略數據本身的問題或業務邏輯錯誤</p>
      </div>
    </div>
  );

  const renderImprovements = () => (
    <div className="space-y-4">
      <div className="bg-blue-50 p-4 rounded-lg">
        <h4 className="font-semibold text-blue-800 mb-2">🔧 混合式除錯策略</h4>
        <div className="text-blue-700 text-sm space-y-2">
          <p><strong>第一步：</strong> 自己先嘗試理解錯誤訊息</p>
          <p><strong>第二步：</strong> 查看數據和預期結果是否合理</p>
          <p><strong>第三步：</strong> 再求助AI工具，但要求它們解釋原因</p>
        </div>
      </div>
      
      <div className="bg-purple-50 p-4 rounded-lg">
        <h4 className="font-semibold text-purple-800 mb-2">📝 建立除錯日誌</h4>
        <div className="text-purple-700 text-sm">
          記錄常見錯誤類型、解決方案和學到的概念，建立個人知識庫
        </div>
      </div>
      
      <div className="bg-orange-50 p-4 rounded-lg">
        <h4 className="font-semibold text-orange-800 mb-2">🎯 分階段學習</h4>
        <div className="text-orange-700 text-sm space-y-1">
          <p>• <strong>初期：</strong> 依賴AI但要求詳細解釋</p>
          <p>• <strong>中期：</strong> 先自己嘗試，再用AI驗證</p>
          <p>• <strong>後期：</strong> 主要靠自己，AI作為最後手段</p>
        </div>
      </div>
      
      <div className="bg-teal-50 p-4 rounded-lg">
        <h4 className="font-semibold text-teal-800 mb-2">🔍 加強基礎技能</h4>
        <div className="text-teal-700 text-sm">
          學習Python基礎、pandas文檔閱讀、錯誤訊息解讀技巧
        </div>
      </div>
    </div>
  );

  const renderChecklist = () => {
    const checklistItems = [
      { id: 'error_msg', text: '仔細閱讀完整錯誤訊息，理解具體問題' },
      { id: 'data_check', text: '檢查輸入數據格式、類型、缺失值' },
      { id: 'expected_output', text: '確認預期輸出是什麼樣子' },
      { id: 'step_by_step', text: '將複雜操作分解成小步驟逐一測試' },
      { id: 'print_debug', text: '使用print()或display()查看中間結果' },
      { id: 'sample_data', text: '用小樣本數據測試代碼邏輯' },
      { id: 'documentation', text: '查閱官方文檔確認函數用法' },
      { id: 'ai_explanation', text: '向AI要求解釋解決方案而非只要代碼' },
      { id: 'test_solution', text: '測試AI提供的解決方案是否真正解決問題' },
      { id: 'understand_fix', text: '確保理解修復的原理，避免重複犯錯' }
    ];

    return (
      <div className="space-y-3">
        <div className="bg-yellow-50 p-3 rounded-lg mb-4">
          <p className="text-yellow-800 text-sm font-medium">💡 使用這個檢查清單來改善你的除錯流程</p>
        </div>
        
        {checklistItems.map((item) => (
          <div key={item.id} className="flex items-start space-x-3 p-3 bg-white rounded-lg border">
            <input
              type="checkbox"
              id={item.id}
              checked={checkedItems[item.id] || false}
              onChange={() => toggleCheck(item.id)}
              className="mt-1 h-4 w-4 text-blue-600 rounded"
            />
            <label 
              htmlFor={item.id}
              className={`text-sm cursor-pointer ${checkedItems[item.id] ? 'text-gray-500 line-through' : 'text-gray-800'}`}
            >
              {item.text}
            </label>
          </div>
        ))}
        
        <div className="mt-4 p-3 bg-green-50 rounded-lg">
          <p className="text-green-800 text-sm">
            <strong>完成度：</strong> {Object.values(checkedItems).filter(Boolean).length}/{checklistItems.length} 項
          </p>
        </div>
      </div>
    );
  };

  const renderContent = () => {
    switch(currentSection) {
      case 'overview': return renderOverview();
      case 'strengths': return renderStrengths();
      case 'weaknesses': return renderWeaknesses();
      case 'improvements': return renderImprovements();
      case 'checklist': return renderChecklist();
      default: return renderOverview();
    }
  };

  return (
    <div className="max-w-4xl mx-auto p-6 bg-white">
      <h1 className="text-2xl font-bold text-gray-800 mb-6">資料分析除錯方法評估</h1>
      
      <div className="flex flex-wrap gap-2 mb-6">
        {Object.entries(sections).map(([key, section]) => {
          const Icon = section.icon;
          return (
            <button
              key={key}
              onClick={() => setCurrentSection(key)}
              className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-colors ${
                currentSection === key
                  ? 'bg-blue-600 text-white'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
              }`}
            >
              <Icon size={16} />
              <span>{section.name}</span>
            </button>
          );
        })}
      </div>

      <div className="bg-gray-50 rounded-lg p-6 min-h-96">
        {renderContent()}
      </div>

      {currentSection === 'checklist' && (
        <div className="mt-4 text-center">
          <p className="text-sm text-gray-600">
            💡 建議將此檢查清單加入書籤，每次除錯時都可以參考！
          </p>
        </div>
      )}
    </div>
  );
};

export default DebuggingAssessment;
